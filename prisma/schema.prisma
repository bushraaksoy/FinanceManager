generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Frequency {
  DAILY
  WEEKLY
  MONTHLY
  YEARLY
}

enum IncomeCategory {
  SALARY
  ALLOWANCE
  COMMISSION
  INVESTMENT
  INTEREST
  ROYALTY
  FREELANCE
  OTHER
}

enum ExpenseCategory {
  HOUSING
  TRANSPORTATION
  HEALTH
  GROCERIES
  CLOTHING
  INSURANCE
  OTHER
}

enum NotificationType {
  REMINDER
  ALERT
}

model User {
  id            String         @id @default(uuid())
  username      String         @unique
  email         String?        @unique
  password      String
  dob           DateTime?
  gender        String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  incomes       Income[]
  expenses      Expense[]
  savings       Saving[]
  notifications Notification[]
}

model Income {
  id          Int             @id @default(autoincrement())
  title       String
  description String?
  amount      Float
  frequency   Frequency?
  date        DateTime?
  category    IncomeCategory?
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  user        User            @relation(fields: [userId], references: [id])
  userId      String
}

model Expense {
  id          Int              @id @default(autoincrement())
  title       String
  description String?
  amount      Float
  frequency   Frequency?
  date        DateTime?
  category    ExpenseCategory?
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  user        User             @relation(fields: [userId], references: [id])
  userId      String
}

model Saving {
  id             Int       @id @default(autoincrement())
  title          String
  description    String?
  targetAmount   Float
  savedAmount    Float?
  dueDate        DateTime?
  durationPeriod DateTime?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  user           User      @relation(fields: [userId], references: [id])
  userId         String
}

model Notification {
  id        Int      @id @default(autoincrement())
  title     String
  message   String
  time      DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isRead    Boolean
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}
